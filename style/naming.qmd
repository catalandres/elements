# Naming

## General rules

- Any exception to this naming convention must be uncontroversial, generally accepted by the whole team, and well documented.

### Labels

- User-exposed labels must be informative, expositive, and neutral.
- Do not include question marks in the label.
- No corporate jargon, no acronyms, no abbreviations. When designing a user-exposed label, name it so that it would make sense to a new employee in their first day of work. Abbreviations and acronyms are OK only if they appear in a general purpose dictionary.
- To reduce confusion, two configuration components of the same type that are exposed to the user will not share the same label. Exceptions to this rule are admissible as long as the components that would bear the same name are not visible to the user at the same time, they do not belong to the same metadata category, or they can be argued to be different enough.

### Developer names

- Developer names should closely follow the contents of the label whenever possible.
- Use `PascalCase` (uppercase `camelCase`) in all developer names. This improves both **ergonomics** (reduced chances of repeated stress injury) and **consistency** (Salesforce's default naming for standard metadata components is `PascalCase`).

## Fields

### Address, email, phone and URL fields

- Unless there is another way to denote the data type, all fields will include whether the underlying data is an address, an email, a phone number or a URL (or website).

### Checkbox fields

- The label should not start with a verb in personal form, but, typically, with a noun or an adjective.
- The no-question-marks-in-labels rule applies here strictly.
- The developer name should take the form of a question that can be answered with a yes/no answer, typically starting with `Is`, `Has`, `Does`, `Do`.

### Date, time and date/time fields

- In Date fields, the word `Date` or `Day` will appear in the label and developer name, unless there is another way to denote the data type.
- In Time fields, the word `Time` or `Hour` will appear in the label and developer name, unless there is another way to denote the data type.
- The same will be true for Date/Time fields, with `Moment` or `Timestamp` as good examples of ways to incorporate the data type into the name of the field.

### Number, currency, and percent fields

## Users